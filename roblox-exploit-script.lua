-- Roblox Exploit/Executor Key System
-- This script works with most Roblox exploits/executors

local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

-- Configuration
local API_BASE_URL = "YOUR_REPLIT_URL_HERE" -- Replace with your actual Replit app URL
local LocalPlayer = Players.LocalPlayer

-- Key validation storage (local to executor)
local ValidatedKey = nil
local KeyExpiresAt = nil

local KeySystem = {}

-- Function to validate a key with your web service
function KeySystem.ValidateKey(key)
    local success, result = pcall(function()
        local response = syn and syn.request or http_request or request({
            Url = API_BASE_URL .. "/api/validate",
            Method = "POST",
            Headers = {
                ["Content-Type"] = "application/json"
            },
            Body = HttpService:JSONEncode({key = key})
        })
        
        if response and response.Body then
            return HttpService:JSONDecode(response.Body)
        else
            return {success = false, message = "No response from server", valid = false}
        end
    end)
    
    if success and result then
        return result
    else
        return {
            success = false,
            message = "Failed to connect to key server",
            valid = false
        }
    end
end

-- Function to check if current key is still valid
function KeySystem.IsKeyValid()
    if not ValidatedKey or not KeyExpiresAt then
        return false
    end
    
    -- Check if key has expired locally
    local currentTime = os.time()
    local expirationTime = os.time({
        year = tonumber(KeyExpiresAt:sub(1, 4)),
        month = tonumber(KeyExpiresAt:sub(6, 7)),
        day = tonumber(KeyExpiresAt:sub(9, 10)),
        hour = tonumber(KeyExpiresAt:sub(12, 13)),
        min = tonumber(KeyExpiresAt:sub(15, 16)),
        sec = tonumber(KeyExpiresAt:sub(18, 19))
    })
    
    return currentTime < expirationTime
end

-- Function to create modern-looking GUI
function KeySystem.CreateKeyGUI()
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "KeySystemGUI"
    ScreenGui.Parent = game.CoreGui
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    -- Main Frame
    local MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.Parent = ScreenGui
    MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    MainFrame.BorderSizePixel = 0
    MainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
    MainFrame.Size = UDim2.new(0, 450, 0, 300)
    
    -- Add corner radius
    local Corner = Instance.new("UICorner")
    Corner.CornerRadius = UDim.new(0, 12)
    Corner.Parent = MainFrame
    
    -- Add shadow effect
    local Shadow = Instance.new("Frame")
    Shadow.Name = "Shadow"
    Shadow.Parent = ScreenGui
    Shadow.AnchorPoint = Vector2.new(0.5, 0.5)
    Shadow.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    Shadow.BackgroundTransparency = 0.7
    Shadow.BorderSizePixel = 0
    Shadow.Position = UDim2.new(0.5, 3, 0.5, 3)
    Shadow.Size = UDim2.new(0, 450, 0, 300)
    Shadow.ZIndex = MainFrame.ZIndex - 1
    
    local ShadowCorner = Instance.new("UICorner")
    ShadowCorner.CornerRadius = UDim.new(0, 12)
    ShadowCorner.Parent = Shadow
    
    -- Title Bar
    local TitleBar = Instance.new("Frame")
    TitleBar.Name = "TitleBar"
    TitleBar.Parent = MainFrame
    TitleBar.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    TitleBar.BorderSizePixel = 0
    TitleBar.Size = UDim2.new(1, 0, 0, 60)
    
    local TitleCorner = Instance.new("UICorner")
    TitleCorner.CornerRadius = UDim.new(0, 12)
    TitleCorner.Parent = TitleBar
    
    -- Fix bottom corners of title bar
    local TitleFix = Instance.new("Frame")
    TitleFix.Parent = TitleBar
    TitleFix.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    TitleFix.BorderSizePixel = 0
    TitleFix.Position = UDim2.new(0, 0, 0.5, 0)
    TitleFix.Size = UDim2.new(1, 0, 0.5, 0)
    
    -- Title Text
    local TitleLabel = Instance.new("TextLabel")
    TitleLabel.Name = "TitleLabel"
    TitleLabel.Parent = TitleBar
    TitleLabel.BackgroundTransparency = 1
    TitleLabel.Position = UDim2.new(0, 20, 0, 0)
    TitleLabel.Size = UDim2.new(1, -40, 1, 0)
    TitleLabel.Font = Enum.Font.GothamBold
    TitleLabel.Text = "🔑 Key Validation System"
    TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    TitleLabel.TextSize = 18
    TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Close Button
    local CloseButton = Instance.new("TextButton")
    CloseButton.Name = "CloseButton"
    CloseButton.Parent = TitleBar
    CloseButton.AnchorPoint = Vector2.new(1, 0.5)
    CloseButton.BackgroundColor3 = Color3.fromRGB(220, 53, 69)
    CloseButton.BorderSizePixel = 0
    CloseButton.Position = UDim2.new(1, -15, 0.5, 0)
    CloseButton.Size = UDim2.new(0, 30, 0, 30)
    CloseButton.Font = Enum.Font.GothamBold
    CloseButton.Text = "×"
    CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    CloseButton.TextSize = 18
    
    local CloseCorner = Instance.new("UICorner")
    CloseCorner.CornerRadius = UDim.new(0, 6)
    CloseCorner.Parent = CloseButton
    
    -- Content Frame
    local ContentFrame = Instance.new("Frame")
    ContentFrame.Name = "ContentFrame"
    ContentFrame.Parent = MainFrame
    ContentFrame.BackgroundTransparency = 1
    ContentFrame.Position = UDim2.new(0, 0, 0, 60)
    ContentFrame.Size = UDim2.new(1, 0, 1, -60)
    
    -- Instruction Label
    local InstructionLabel = Instance.new("TextLabel")
    InstructionLabel.Name = "InstructionLabel"
    InstructionLabel.Parent = ContentFrame
    InstructionLabel.BackgroundTransparency = 1
    InstructionLabel.Position = UDim2.new(0, 30, 0, 20)
    InstructionLabel.Size = UDim2.new(1, -60, 0, 40)
    InstructionLabel.Font = Enum.Font.Gotham
    InstructionLabel.Text = "Enter your access key to continue:"
    InstructionLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    InstructionLabel.TextSize = 14
    InstructionLabel.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Key Input Box
    local KeyInput = Instance.new("TextBox")
    KeyInput.Name = "KeyInput"
    KeyInput.Parent = ContentFrame
    KeyInput.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    KeyInput.BorderSizePixel = 0
    KeyInput.Position = UDim2.new(0, 30, 0, 80)
    KeyInput.Size = UDim2.new(1, -60, 0, 45)
    KeyInput.Font = Enum.Font.Gotham
    KeyInput.PlaceholderText = "FREE_xxxxx"
    KeyInput.Text = ""
    KeyInput.TextColor3 = Color3.fromRGB(255, 255, 255)
    KeyInput.TextSize = 14
    KeyInput.ClearTextOnFocus = false
    
    local InputCorner = Instance.new("UICorner")
    InputCorner.CornerRadius = UDim.new(0, 8)
    InputCorner.Parent = KeyInput
    
    local InputPadding = Instance.new("UIPadding")
    InputPadding.PaddingLeft = UDim.new(0, 15)
    InputPadding.PaddingRight = UDim.new(0, 15)
    InputPadding.Parent = KeyInput
    
    -- Validate Button
    local ValidateButton = Instance.new("TextButton")
    ValidateButton.Name = "ValidateButton"
    ValidateButton.Parent = ContentFrame
    ValidateButton.BackgroundColor3 = Color3.fromRGB(40, 167, 69)
    ValidateButton.BorderSizePixel = 0
    ValidateButton.Position = UDim2.new(0, 30, 0, 145)
    ValidateButton.Size = UDim2.new(0.48, -15, 0, 40)
    ValidateButton.Font = Enum.Font.GothamBold
    ValidateButton.Text = "Validate Key"
    ValidateButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    ValidateButton.TextSize = 14
    
    local ValidateCorner = Instance.new("UICorner")
    ValidateCorner.CornerRadius = UDim.new(0, 8)
    ValidateCorner.Parent = ValidateButton
    
    -- Get Key Button
    local GetKeyButton = Instance.new("TextButton")
    GetKeyButton.Name = "GetKeyButton"
    GetKeyButton.Parent = ContentFrame
    GetKeyButton.BackgroundColor3 = Color3.fromRGB(0, 123, 255)
    GetKeyButton.BorderSizePixel = 0
    GetKeyButton.Position = UDim2.new(0.52, 15, 0, 145)
    GetKeyButton.Size = UDim2.new(0.48, -15, 0, 40)
    GetKeyButton.Font = Enum.Font.GothamBold
    GetKeyButton.Text = "Get Key"
    GetKeyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    GetKeyButton.TextSize = 14
    
    local GetKeyCorner = Instance.new("UICorner")
    GetKeyCorner.CornerRadius = UDim.new(0, 8)
    GetKeyCorner.Parent = GetKeyButton
    
    -- Status Label
    local StatusLabel = Instance.new("TextLabel")
    StatusLabel.Name = "StatusLabel"
    StatusLabel.Parent = ContentFrame
    StatusLabel.BackgroundTransparency = 1
    StatusLabel.Position = UDim2.new(0, 30, 0, 200)
    StatusLabel.Size = UDim2.new(1, -60, 0, 30)
    StatusLabel.Font = Enum.Font.Gotham
    StatusLabel.Text = ""
    StatusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    StatusLabel.TextSize = 12
    StatusLabel.TextXAlignment = Enum.TextXAlignment.Center
    
    -- Dragging functionality
    local dragging = false
    local dragStart = nil
    local startPos = nil
    
    TitleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = MainFrame.Position
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            Shadow.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X + 3, startPos.Y.Scale, startPos.Y.Offset + delta.Y + 3)
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    -- Button animations
    local function animateButton(button, hoverColor, originalColor)
        button.MouseEnter:Connect(function()
            local tween = TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = hoverColor})
            tween:Play()
        end)
        
        button.MouseLeave:Connect(function()
            local tween = TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = originalColor})
            tween:Play()
        end)
    end
    
    animateButton(ValidateButton, Color3.fromRGB(50, 187, 89), Color3.fromRGB(40, 167, 69))
    animateButton(GetKeyButton, Color3.fromRGB(20, 143, 255), Color3.fromRGB(0, 123, 255))
    animateButton(CloseButton, Color3.fromRGB(240, 73, 89), Color3.fromRGB(220, 53, 69))
    
    -- Event handlers
    CloseButton.MouseButton1Click:Connect(function()
        ScreenGui:Destroy()
    end)
    
    GetKeyButton.MouseButton1Click:Connect(function()
        setclipboard(API_BASE_URL)
        StatusLabel.Text = "Key generator URL copied to clipboard!"
        StatusLabel.TextColor3 = Color3.fromRGB(40, 167, 69)
    end)
    
    ValidateButton.MouseButton1Click:Connect(function()
        local key = KeyInput.Text:gsub("%s+", "") -- Remove spaces
        
        if key == "" then
            StatusLabel.Text = "Please enter a key"
            StatusLabel.TextColor3 = Color3.fromRGB(220, 53, 69)
            return
        end
        
        StatusLabel.Text = "Validating key..."
        StatusLabel.TextColor3 = Color3.fromRGB(255, 193, 7)
        ValidateButton.Text = "Validating..."
        ValidateButton.BackgroundColor3 = Color3.fromRGB(108, 117, 125)
        
        local result = KeySystem.ValidateKey(key)
        
        if result.success and result.valid then
            ValidatedKey = key
            KeyExpiresAt = result.keyData.expires
            
            StatusLabel.Text = "✅ Key validated successfully!"
            StatusLabel.TextColor3 = Color3.fromRGB(40, 167, 69)
            
            wait(1)
            ScreenGui:Destroy()
            KeySystem.OnKeyValidated()
        else
            StatusLabel.Text = "❌ " .. (result.message or "Invalid key")
            StatusLabel.TextColor3 = Color3.fromRGB(220, 53, 69)
            ValidateButton.Text = "Validate Key"
            ValidateButton.BackgroundColor3 = Color3.fromRGB(40, 167, 69)
        end
    end)
    
    KeyInput.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            ValidateButton.MouseButton1Click:Connect(function() end)()
        end
    end)
    
    return ScreenGui
end

-- Function called when key is validated
function KeySystem.OnKeyValidated()
    print("🔑 Key System: Access granted!")
    
    -- Create notification
    KeySystem.CreateNotification("Access Granted", "Key validated successfully! Loading script...", Color3.fromRGB(40, 167, 69))
    
    -- Your script content goes here
    KeySystem.LoadMainScript()
end

-- Function to create notifications
function KeySystem.CreateNotification(title, message, color)
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "NotificationGUI"
    ScreenGui.Parent = game.CoreGui
    
    local Frame = Instance.new("Frame")
    Frame.Parent = ScreenGui
    Frame.AnchorPoint = Vector2.new(1, 0)
    Frame.BackgroundColor3 = color
    Frame.BorderSizePixel = 0
    Frame.Position = UDim2.new(1, 20, 0, 20)
    Frame.Size = UDim2.new(0, 300, 0, 80)
    
    local Corner = Instance.new("UICorner")
    Corner.CornerRadius = UDim.new(0, 8)
    Corner.Parent = Frame
    
    local TitleLabel = Instance.new("TextLabel")
    TitleLabel.Parent = Frame
    TitleLabel.BackgroundTransparency = 1
    TitleLabel.Position = UDim2.new(0, 15, 0, 10)
    TitleLabel.Size = UDim2.new(1, -30, 0, 25)
    TitleLabel.Font = Enum.Font.GothamBold
    TitleLabel.Text = title
    TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    TitleLabel.TextSize = 14
    TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
    
    local MessageLabel = Instance.new("TextLabel")
    MessageLabel.Parent = Frame
    MessageLabel.BackgroundTransparency = 1
    MessageLabel.Position = UDim2.new(0, 15, 0, 35)
    MessageLabel.Size = UDim2.new(1, -30, 0, 35)
    MessageLabel.Font = Enum.Font.Gotham
    MessageLabel.Text = message
    MessageLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    MessageLabel.TextSize = 12
    MessageLabel.TextWrapped = true
    MessageLabel.TextXAlignment = Enum.TextXAlignment.Left
    MessageLabel.TextYAlignment = Enum.TextYAlignment.Top
    
    -- Slide in animation
    Frame.Position = UDim2.new(1, 20, 0, 20)
    local slideIn = TweenService:Create(Frame, TweenInfo.new(0.5, Enum.EasingStyle.Back), {Position = UDim2.new(1, -320, 0, 20)})
    slideIn:Play()
    
    -- Auto hide after 3 seconds
    game:GetService("Debris"):AddItem(ScreenGui, 5)
    
    wait(3)
    local slideOut = TweenService:Create(Frame, TweenInfo.new(0.3), {Position = UDim2.new(1, 20, 0, 20)})
    slideOut:Play()
end

-- Main script loading function
function KeySystem.LoadMainScript()
    -- PUT YOUR MAIN SCRIPT/EXPLOIT CODE HERE
    print("🚀 Loading main script...")
    
    -- Example: Load external script
    -- loadstring(game:HttpGet("https://your-script-url.com/script.lua"))()
    
    -- Or execute your code directly:
    KeySystem.CreateNotification("Script Loaded", "Your exploit is now active!", Color3.fromRGB(0, 123, 255))
    
    -- Example features you can add:
    -- - ESP
    -- - Aimbot  
    -- - Speed hacks
    -- - Fly
    -- - etc.
end

-- Initialize the key system
function KeySystem.Init()
    if KeySystem.IsKeyValid() then
        print("🔑 Key System: Valid key found, loading script...")
        KeySystem.OnKeyValidated()
    else
        print("🔑 Key System: No valid key found, showing validation GUI...")
        KeySystem.CreateKeyGUI()
    end
end

-- Start the key system
KeySystem.Init()

return KeySystem